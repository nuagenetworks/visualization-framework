simulate_pps_stats.py is a simple python program that generates simulated PPS flow logs, probe logs and sla logs in json format and writes in to elasticsearch server

Requirements to run the program:
1. Install Python 2
2. Run 'pip install -r requirements.txt'
3. Configure Elastic search server ip in the config.ini under "es_server"
4. Configure Elastic search server ip in the init_template.sh in place of 'http://localhost:9200'
5. Run 'init_template.sh' to setup an elasticsearch template.
6. Create a folder named 'log' in the same location where simulate_pps_stats.py is stored
7. Run 'python simulate_pps_stats.py' to push entries into elasticsearch

About simulator -

Current limitations:
Single Enterprise. And generates flows only across nsgs in the same domain.

Time increment:
30 seconds

Configuration:
In the config.ini file, user can specify the resource counts and the program will generate that many random resource UUIDS and will be used for generating flows, probes and sla logs.
The user can specify their organization name which would be used to create organization for elasticsearch entries.

per timestamp:
number of flow records generated = num_of_domains * nsg_cnt * vport_cnt Combinations 2 * app_cnt
Eg: For def_conf: 1 * 4 * 2C2 * 5 = 20

number of probe records generated = nsg_cnt Combinations 2
Eg: For def_conf: 4C2 = 6

number of sla records generated = nsg_cnt/2 * appgrp_cnt
Eg: For def_conf: 4/2 * 2 = 4

duration:
Duration of past to cover in stats, specified in hours(h) or minutes(h)
Eg: 5h => 5 hours, 30m => 30 minutes

NATT based settings:
    natt_ip_prefix:
    IP prefix used alongside real host address

    natt_port:
    Default used natt port

    natt_conn_failure_probability:
    The probability with which an IP of NATT(applies to all 4 IP addresses Probe learnt * 2, VSC learnt * 2) is found to be ZERO at each timestep by the NSG.
    This boils down to the amount of "YELLOW/RED" to increase in the NATT summary heatmap.


